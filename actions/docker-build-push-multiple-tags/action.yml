name: Docker Build and Push with Multiple Tags (Latest, Datetime, and Git SHA)
description: Composite action to calculate tags, login to Docker Hub, set up buildx, and build/push Docker images.
author: shanieMoonlight
inputs:
  image_name:
    description: 'Docker image name (e.g. owner/repo)'
    required: true
  dockerfile:
    description: 'Path to Dockerfile'
    required: false
    default: 'Dockerfile'
  context:
    description: 'Build context'
    required: false
    default: '.'
  push:
    description: 'Whether to push the image (true/false)'
    required: false
    default: 'true'
  docker_username:
    description: 'Docker registry username (pass via workflow secrets)'
    required: true
  docker_password:
    description: 'Docker registry password (pass via workflow secrets)'
    required: true
outputs:
  tags:
    description: 'Comma-separated list of tags generated by calculate-docker-tags'
    value: ${{ steps.export_tags.outputs.tags }}
runs:
  using: composite
  steps:
    - name: Calculate Tags (Action)
      id: calc
      uses: shanieMoonlight/git-actions/actions/calculate-docker-tags@master
      # uses: ../calculate-docker-tags
      with:
        image_name: ${{ inputs.image_name }}
        
    - name: Export tags as comma-separated string (safe)
      id: export_tags
      if: always()
      run: |
        tags="${{ steps.calc.outputs.tags }}" || tags=""
        csv=$(printf '%s' "$tags" | awk 'NF{print}' | paste -sd, -)
        echo "tags=$csv" >> $GITHUB_OUTPUT
      shell: bash
    

    - name: Dump action GITHUB_OUTPUT (debug)
      if: always()
      run: |
        echo "GITHUB_OUTPUT=$GITHUB_OUTPUT"
        echo "---- start of file ----"
        sed -n '1,200p' "$GITHUB_OUTPUT" || true
        echo "---- end of file ----"
      shell: bash



    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Set up Docker Buildx (docker-container driver)
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container


    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.push }}
        tags: ${{ steps.calc.outputs.tags }}
        pull: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
